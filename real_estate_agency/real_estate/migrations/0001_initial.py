# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-08-04 17:12
from __future__ import unicode_literals

from django.db import migrations, models

import real_estate


def update_contentypes(apps, schema_editor):
    """
    Updates content types.
    We want to have the same content type id, when the model is moved and renamed.
    """
    ContentType = apps.get_model('contenttypes', 'ContentType')
    db_alias = schema_editor.connection.alias

    # Move the residentalcomplexcharacteristic model to real_estate and rename to characteristic
    qs = ContentType.objects.using(db_alias).filter(app_label='new_buildings', model='residentalcomplexcharacteristic')
    qs.update(app_label='real_estate', model='characteristic')


def update_contentypes_reverse(apps, schema_editor):
    """
    Reverts changes in content types.
    """
    ContentType = apps.get_model('contenttypes', 'ContentType')
    db_alias = schema_editor.connection.alias

    # Move the characteristic model to new_buildings and rename to residentalcomplexcharacteristic
    qs = ContentType.objects.using(db_alias).filter(app_label='real_estate', model='characteristic')
    qs.update(app_label='new_buildings', model='residentalcomplexcharacteristic')

class Migration(migrations.Migration):

    dependencies = [
    	('new_buildings', '0014_rename_characteristic'),
    	('contenttypes', '0002_remove_content_type_name'),
    ]

    state_operations = [
        migrations.CreateModel(
            name='residentalcomplexcharacteristic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('characteristic', models.CharField(max_length=127, unique=True, verbose_name='характеристика')),
                ('icon', models.ImageField(upload_to=real_estate.models.get_file_path, verbose_name='иконка')),
            ],
            options={
                'verbose_name_plural': 'характеристики',
                'verbose_name': 'характеристика',
            },
        ),
        migrations.RenameModel(
            old_name='residentalcomplexcharacteristic',
            new_name='characteristic',
        ),
    ]

    database_operations = [
        migrations.RunPython(update_contentypes, update_contentypes_reverse),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            state_operations=state_operations,
            database_operations=database_operations
        ),
    ]