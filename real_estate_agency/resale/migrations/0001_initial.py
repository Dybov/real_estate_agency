# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-08-19 19:46
from __future__ import unicode_literals

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import real_estate.models.helper


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('address', '0001_initial'),
        ('new_buildings', '0001_initial'),
        ('real_estate', '0001_initial'),
        ('company', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ResaleApartment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('building', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='номер дома')),
                ('building_block', models.CharField(blank=True, help_text='оставьте пустым, если поле не имеет смысла', max_length=5, null=True, verbose_name='корпус')),
                ('zip_code', models.CharField(blank=True, max_length=127, null=True, verbose_name='почтовый индекс')),
                ('coordinates', models.CharField(blank=True, max_length=127, null=True, verbose_name='широта,долгота')),
                ('layout', models.ImageField(upload_to=real_estate.models.helper.get_file_path, verbose_name='планировка')),
                ('total_area', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('15.00'))], verbose_name='общая площадь (м2)')),
                ('interior_decoration', models.CharField(choices=[('D', 'ремонт'), ('ED', 'евро ремонт'), ('F', 'чистовая'), ('SF', 'предчистовая'), ('P', 'улучшенная черновая'), ('UF', 'черновая')], default='UF', max_length=31, verbose_name='вид отделки')),
                ('price', models.DecimalField(decimal_places=0, default=1000000, help_text='данная цена является той суммой, которую хочет получить продавец.          Не отображается на сайте.', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='цена, рб')),
                ('description', models.TextField(blank=True, null=True, verbose_name='описание')),
                ('celling_height', models.DecimalField(decimal_places=1, default=2.7, max_digits=2, validators=[django.core.validators.MinValueValidator(Decimal('2.0'))], verbose_name='высота потолка (м)')),
                ('is_active', models.BooleanField(default=True, verbose_name='отображать на сайте')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='добавлено')),
                ('last_modification', models.DateTimeField(auto_now=True, verbose_name='изменено')),
                ('rooms', models.CharField(choices=[('B', 'студия'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7')], default='1', help_text='Если вы не нашли нужного пункта - обратитесь к администратору', max_length=1, verbose_name='количество комнат')),
                ('floor', models.CharField(default=1, max_length=127, verbose_name='этаж')),
                ('section', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='подъезд/секция')),
                ('kitchen_area', models.DecimalField(decimal_places=2, default=5, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('5.00'))], verbose_name='площадь кухни (м2)')),
                ('balcony_area', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='площадь балкона (м2)')),
                ('building_type', models.CharField(choices=[('BRICK', 'кирпичный'), ('MONO', 'монолитный'), ('FRAME', 'каркасный'), ('PANEL', 'панельный'), ('MFRAME', 'монолитно-каркасный'), ('BPANEL', 'панельный-кирпичный'), ('RCBLOCK', 'блоки железобетоные'), ('SBLOCK', 'cиликатный блок')], default='MONO', max_length=127, verbose_name='исполнение дома')),
                ('number_of_storeys', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='количество этажей')),
                ('status', models.CharField(choices=[('ACTIVE', 'активна'), ('SOLD-BY-US', 'продано с помощью ДОМУС'), ('SOLD-BY-SMBD', 'продано без участия ДОМУС')], default='ACTIVE', max_length=127, verbose_name='статус сделки')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='комментарий/результат сделки')),
                ('sold_date', models.DateField(blank=True, null=True, verbose_name='дата продажи/завершения сделки')),
                ('previous_buy_date', models.DateField(blank=True, null=True, verbose_name='дата предыдущей покупки/сделки по данной недвижимости')),
                ('agency_price', models.DecimalField(decimal_places=0, default=1000000, help_text='сюда включена комиссия агенства, отображается на сайте', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='начальная стоимость, рб')),
                ('agency_price_with_sales', models.DecimalField(blank=True, decimal_places=0, default=None, help_text='Оставьте поле пустым, чтобы скидка не отображалась. Сюда включена комиссия агенства, отображается на сайте', max_digits=15, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))], verbose_name='стоимость со скидкой, рб')),
                ('apartment_number', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='номер квартиры')),
                ('home_series', models.CharField(blank=True, max_length=127, null=True, verbose_name='серия дома')),
                ('date_of_construction', models.DateField(blank=True, null=True, verbose_name='Год постройки дома')),
                ('amount_of_owners', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='количество собственников')),
                ('owner_name', models.CharField(max_length=127, verbose_name='ФИО продавца')),
                ('owner_phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, verbose_name='номер телефона продавца')),
            ],
            options={
                'verbose_name': 'объект вторичка',
                'verbose_name_plural': 'объекты вторички',
                'permissions': (('can_add_change_delete_all_resale', 'Имеет доступ к чужим данным по вторичке'),),
            },
        ),
        migrations.CreateModel(
            name='ResaleApartmentImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=real_estate.models.helper.get_file_path, verbose_name='изображение')),
                ('apartment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='resale.ResaleApartment')),
            ],
            options={
                'verbose_name': 'изображение',
                'verbose_name_plural': 'изображения',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResaleCharacteristic',
            fields=[
            ],
            options={
                'verbose_name': 'объект "характеристика вторички"',
                'verbose_name_plural': 'характеристики вторички',
                'indexes': [],
                'proxy': True,
            },
            bases=('real_estate.characteristic',),
        ),
        migrations.AddField(
            model_name='resaleapartment',
            name='characteristics',
            field=models.ManyToManyField(blank=True, to='real_estate.Characteristic', verbose_name='характеристики квартиры'),
        ),
        migrations.AddField(
            model_name='resaleapartment',
            name='created_by',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='resale_resaleapartment_created', to=settings.AUTH_USER_MODEL, verbose_name='создано'),
        ),
        migrations.AddField(
            model_name='resaleapartment',
            name='modified_by',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='resale_resaleapartment_modified', to=settings.AUTH_USER_MODEL, verbose_name='изменено'),
        ),
        migrations.AddField(
            model_name='resaleapartment',
            name='neighbourhood',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='address.NeighbourhoodModel', verbose_name='район'),
        ),
        migrations.AddField(
            model_name='resaleapartment',
            name='related_mortgage',
            field=models.ForeignKey(blank=True, default=None, help_text='если находится в ипотеке', null=True, on_delete=django.db.models.deletion.CASCADE, to='company.BankPartner', verbose_name='В ипотеке у'),
        ),
        migrations.AddField(
            model_name='resaleapartment',
            name='residental_complex',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='new_buildings.ResidentalComplex', verbose_name='жилой комплекс'),
        ),
        migrations.AddField(
            model_name='resaleapartment',
            name='street',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='address.StreetModel', verbose_name='улица'),
        ),
    ]
